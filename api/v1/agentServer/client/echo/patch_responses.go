// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 Authors of kdoctor-io
// SPDX-License-Identifier: Apache-2.0

package echo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PatchReader is a Reader for the Patch structure.
type PatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewPatchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchOK creates a PatchOK with default headers values
func NewPatchOK() *PatchOK {
	return &PatchOK{}
}

/*
PatchOK describes a response with status code 200, with default header values.

Success
*/
type PatchOK struct {
}

// IsSuccess returns true when this patch o k response has a 2xx status code
func (o *PatchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch o k response has a 3xx status code
func (o *PatchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch o k response has a 4xx status code
func (o *PatchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch o k response has a 5xx status code
func (o *PatchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch o k response a status code equal to that given
func (o *PatchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the patch o k response
func (o *PatchOK) Code() int {
	return 200
}

func (o *PatchOK) Error() string {
	return fmt.Sprintf("[PATCH /][%d] patchOK ", 200)
}

func (o *PatchOK) String() string {
	return fmt.Sprintf("[PATCH /][%d] patchOK ", 200)
}

func (o *PatchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchInternalServerError creates a PatchInternalServerError with default headers values
func NewPatchInternalServerError() *PatchInternalServerError {
	return &PatchInternalServerError{}
}

/*
PatchInternalServerError describes a response with status code 500, with default header values.

Failed
*/
type PatchInternalServerError struct {
}

// IsSuccess returns true when this patch internal server error response has a 2xx status code
func (o *PatchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch internal server error response has a 3xx status code
func (o *PatchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch internal server error response has a 4xx status code
func (o *PatchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch internal server error response has a 5xx status code
func (o *PatchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch internal server error response a status code equal to that given
func (o *PatchInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the patch internal server error response
func (o *PatchInternalServerError) Code() int {
	return 500
}

func (o *PatchInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /][%d] patchInternalServerError ", 500)
}

func (o *PatchInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /][%d] patchInternalServerError ", 500)
}

func (o *PatchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

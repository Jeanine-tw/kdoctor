// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 Authors of kdoctor-io
// SPDX-License-Identifier: Apache-2.0

package echo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPatchKdoctoragentParams creates a new PatchKdoctoragentParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchKdoctoragentParams() *PatchKdoctoragentParams {
	return &PatchKdoctoragentParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchKdoctoragentParamsWithTimeout creates a new PatchKdoctoragentParams object
// with the ability to set a timeout on a request.
func NewPatchKdoctoragentParamsWithTimeout(timeout time.Duration) *PatchKdoctoragentParams {
	return &PatchKdoctoragentParams{
		timeout: timeout,
	}
}

// NewPatchKdoctoragentParamsWithContext creates a new PatchKdoctoragentParams object
// with the ability to set a context for a request.
func NewPatchKdoctoragentParamsWithContext(ctx context.Context) *PatchKdoctoragentParams {
	return &PatchKdoctoragentParams{
		Context: ctx,
	}
}

// NewPatchKdoctoragentParamsWithHTTPClient creates a new PatchKdoctoragentParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchKdoctoragentParamsWithHTTPClient(client *http.Client) *PatchKdoctoragentParams {
	return &PatchKdoctoragentParams{
		HTTPClient: client,
	}
}

/*
PatchKdoctoragentParams contains all the parameters to send to the API endpoint

	for the patch kdoctoragent operation.

	Typically these are written to a http.Request.
*/
type PatchKdoctoragentParams struct {

	/* Delay.

	   delay some second return response
	*/
	Delay *int64

	/* Task.

	   task name
	*/
	Task *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch kdoctoragent params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchKdoctoragentParams) WithDefaults() *PatchKdoctoragentParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch kdoctoragent params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchKdoctoragentParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch kdoctoragent params
func (o *PatchKdoctoragentParams) WithTimeout(timeout time.Duration) *PatchKdoctoragentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch kdoctoragent params
func (o *PatchKdoctoragentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch kdoctoragent params
func (o *PatchKdoctoragentParams) WithContext(ctx context.Context) *PatchKdoctoragentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch kdoctoragent params
func (o *PatchKdoctoragentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch kdoctoragent params
func (o *PatchKdoctoragentParams) WithHTTPClient(client *http.Client) *PatchKdoctoragentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch kdoctoragent params
func (o *PatchKdoctoragentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDelay adds the delay to the patch kdoctoragent params
func (o *PatchKdoctoragentParams) WithDelay(delay *int64) *PatchKdoctoragentParams {
	o.SetDelay(delay)
	return o
}

// SetDelay adds the delay to the patch kdoctoragent params
func (o *PatchKdoctoragentParams) SetDelay(delay *int64) {
	o.Delay = delay
}

// WithTask adds the task to the patch kdoctoragent params
func (o *PatchKdoctoragentParams) WithTask(task *string) *PatchKdoctoragentParams {
	o.SetTask(task)
	return o
}

// SetTask adds the task to the patch kdoctoragent params
func (o *PatchKdoctoragentParams) SetTask(task *string) {
	o.Task = task
}

// WriteToRequest writes these params to a swagger request
func (o *PatchKdoctoragentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Delay != nil {

		// query param delay
		var qrDelay int64

		if o.Delay != nil {
			qrDelay = *o.Delay
		}
		qDelay := swag.FormatInt64(qrDelay)
		if qDelay != "" {

			if err := r.SetQueryParam("delay", qDelay); err != nil {
				return err
			}
		}
	}

	if o.Task != nil {

		// query param task
		var qrTask string

		if o.Task != nil {
			qrTask = *o.Task
		}
		qTask := qrTask
		if qTask != "" {

			if err := r.SetQueryParam("task", qTask); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
